html {
  box-sizing: border-box;
  width: 100%;
  overflow-x: hidden;
  scroll-behavior: smooth;
}

body {
  position: relative;
  overflow-x: hidden;
  width: 100%;
  // min-height: -webkit-fill-available;
  margin: 0;

  font-weight: 400;
  font-size: var(--body-font-size);
  line-height: normal;
  font-family: var(--font-family);
  color: var(--body-color);

  background: var(--body-bg);

  -webkit-text-size-adjust: 100%;
  // for text resize

  &.fixed-body {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
    // disable scroll
  }
}

main {
  min-width: 0 !important;
}

.register {
  @media (min-width: 1240px) {
    zoom: 85%;
  }
}

*,
*::after,
*::before {
  box-sizing: border-box;
}

* {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

.hidden-desktop {
  display: none;

  @include small-tablet {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    justify-items: center;
    grid-gap: 30px;
    margin-bottom: 20px;
  }

  @include mobile {
    position: relative;
    grid-template-columns: 35% 1fr;

    &::before {
      content: '';
      width: 3px;
      background-color: rgba(var(--bg-a),1.0);
      position: absolute;
      left: 40%;
      top: 0;
      bottom: 0;
      transform: translateX(-50%);
    }

  }
}

video::-webkit-media-controls {
  // display:none !important;
  opacity: 0;
}


a {
  display: inline-flex;
  margin: 0;

  font-style: inherit;
  font-weight: inherit;
  font-family: inherit;
  color: inherit;
  text-decoration: none;

  cursor: pointer;

  svg {
    pointer-events: none;
  }
}

button {
  display: inline-flex;
  margin: 0;
  padding: 0;

  line-height: initial;
  color: inherit;

  background-color: transparent;
  border: none;
  outline: none;
  cursor: pointer;

  svg,img {
    pointer-events: none;
  }
}

ul,
ol,
li {
  margin: 0;
  padding: 0;

  list-style: none;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
  padding: 0;


  i {
    font-style: normal;
    font-weight: inherit;
    font-size: inherit;
    line-height: inherit;
    color: rgba(var(--cl-c),1.0);
  }
}

img {
  max-width: 100%;
  height: auto;

  object-fit: cover;
}

picture {
  display: flex;
}

label {
  display: inline-flex;
}

input {
  width: 100%;

  background-color: none;
  border: none;
  outline: none;

  &::placeholder {
    font-weight: inherit;
    font-size: inherit;
    line-height: inherit;
    font-family: inherit;
  }
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  margin: 0;

  appearance: none;
}

textarea {
  border: none;
  outline: none;

  resize: none;
}

input[type="number"] {
  appearance: textfield;
}

.visually-hidden {
  position: absolute;

  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;

  white-space: nowrap;

  border: 0;

  clip: rect(0 0 0 0);
  clip-path: inset(100%);
}


.container {
  position: relative;
  width: 100%;
  max-width: var(--container-width);
  margin: 0 auto;
  padding: 0 var(--container-offset);
}

.panel,
[data-content] {
  z-index: 20;

  max-height: 0;
  overflow: hidden;

  transition: max-height 0.2s;
}

[data-tab-content] {
  display: none !important;

  &.active {
    display: block !important;
  }
}


.dis-scroll {
  position: fixed;
  top: 0;
  left: 0;

  width: 100%;
  // height: 100vh;
  overflow: hidden;
  // z-index: 9999;
  background-attachment: fixed;
  overscroll-behavior: none !important;
  scroll-behavior: none !important;
}

.page--ios .dis-scroll {
  position: relative;
}

.overlay {
  @include overlay;
}

fieldset {
  margin: 0;
  padding: 0;

  border: none;
}

.modal {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  opacity: 0;
  pointer-events: none;
  visibility: hidden;

  &.active {
    position: fixed;
    z-index: 20;
    visibility: visible;
    animation: fadeIn ease-out 600ms forwards;
    pointer-events: initial;
  }

  @keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
  }

  &__close {
    position: absolute;
    right: clamp(30px, 7.661vw, 95px);
    top: clamp(30px, 3.226vw, 40px);
    z-index: 20;

    svg {
      pointer-events: none;
      transition: all .4s;
      width: clamp(25px, 4.032vw, 50px);
      height: clamp(25px, 4.032vw, 50px);
  
      fill: rgba(var(--bg-c),1.0);
    }

      &:hover{
        svg{
        fill: rgba(var(--bg-e),1.0);
      }
    }
  }
}